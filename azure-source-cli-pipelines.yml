# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
- group: source-container-cli
- name: my-passed-variables
  value: $[variables.AS_LICENSE_TYPE]
- name: my-passed-variables
  value: $[variables.AS_LICENSE_SERVER]
- name: my-passed-variables
  value: $[variables.AS_LICENSE_SERVER_ID]
- name: my-passed-variables
  value: $[variables.AS_INSTALL_MODE]
steps:
- script: ls -l
  displayName: 'List Directory'

- task: Docker@2
  inputs:
    command: 'build'
    Dockerfile: '**/Dockerfile'
    tags: 
    arguments: '-t my-source-cli:latest'
  displayName: 'Build dockerfile'

- script: sudo docker run -e "AS_LICENSE_TYPE=$(AS_LICENSE_TYPE)" -e "AS_LICENSE_SERVER=$(AS_LICENSE_SERVER)" -e "AS_LICENSE_SERVER_ID=$(AS_LICENSE_SERVER_ID)" -e "AS_INSTALL_MODE=$(AS_INSTALL_MODE)" -v "$(pwd):/host" my-source-cli "script /host/azure-source-cli.script"
  displayName: 'AppScan Source'

- task: CmdLine@2
  inputs:
    script: 'ls -l'
  displayName: 'Directory Listing'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    FileCopyOptions: |
      '**/*.pdf'
      '**/*.ozasmt'